    if (registroliquidacionHonorario.id == 2):   # SOAT

        # Consigue procedimientos a facturar

        miConexion3 = None
        try:
            print("Entre por liquiacion SOAT")
            miConexion3 = psycopg2.connect(host="192.168.79.133", database="vulner2", port="5432", user="postgres",
                                           password="123456")
            cur3 = miConexion3.cursor()


            detalle = 'SELECT cups_id cups, cruento, incruento FROM cirugia_cirugiasprocedimientos WHERE cirugia_id = ' + "'" + str(cirugiaId) + "'"

            print(detalle)

            cupsLiquidacion = []

            cur3.execute(detalle)

            for cups, cruento, incruento in cur3.fetchall():
                cupsLiquidacion.append({'cups':cups, 'cruento':cruento, 'incruento':incruento})


            print("cups =" , cupsLiquidacion)

            # Validacion si existe o No existe CABEZOTE

            comando = 'SELECT id FROM facturacion_liquidacion WHERE "tipoDoc_id" = ' + "'" + str(registroCirugia.tipoDoc_id) + "' AND documento_id = " + "'" + str(registroCirugia.documento_id) + "'" + ' AND "consecAdmision" = ' + "'" + str(registroCirugia.consecAdmision) + "'"
            cur3.execute(comando)

            cabezoteLiquidacion = []

            for id in cur3.fetchall():
                cabezoteLiquidacion.append({'id': id})

            print("CABEZOTE DE LIQUIDACION = ", cabezoteLiquidacion);

            if (cabezoteLiquidacion == []):

                comando = 'INSERT INTO facturacion_liquidacion ("sedesClinica_id", "tipoDoc_id", documento_id, "consecAdmision", fecha, "totalCopagos", "totalCuotaModeradora", "totalProcedimientos" , "totalSuministros" , "totalLiquidacion", "valorApagar", anticipos, "fechaRegistro", "estadoRegistro", convenio_id,  "usuarioRegistro_id", "totalAbonos") VALUES (' + "'" + str(
                    sede) + "'," + "'" + str(registroCirugia.tipoDoc_id) + "','" + str(registroCirugia.documento_id) + "','" + str(
                    registroCirugia.consecAdmision) + "','" + str(fechaRegistro) + "'," + '0,0,0,0,0,0,0,' + "'" + str(
                    fechaRegistro) + "','" + str(estadoReg) + "'," + str(
                    registroConvenio.convenio_id) + ',' + "'" + str(username_id) + "',0) RETURNING id "
                cur3.execute(comando)
                liquidacionId = curt.fetchone()[0]

                print("resultado liquidacionId = ", liquidacionId)

            else:
                liquidacionId = cabezoteLiquidacion[0]['id']
                liquidacionId = str(liquidacionId)
                print("liquidacionId = ", liquidacionId)

            liquidacionId = str(liquidacionId)
            liquidacionId = liquidacionId.replace("(", ' ')
            liquidacionId = liquidacionId.replace(")", ' ')
            liquidacionId = liquidacionId.replace(",", ' ')

            # Fin validacion de Liquidacion cabezote

            # Rutiva busca en convenio el valor de la tarifa CUPS
            print("liquidacionId = ", liquidacionId)

            # Primero que todo borrar lo ya liquidado , para volver a hacer una nueva liquidacion

            comando = 'DELETE FROM facturacion_liquidaciondetalle p WHERE liquidacion_id = ' + "'" + str(liquidacionId) + "' AND cirugia_id = " + "'" + str(cirugiaId) + "'"

            cur3.execute(comando)

            # Aqui RUTINA busca consecutivo de liquidacion


            comando = 'SELECT (max(p.consecutivo) + 1) cons FROM facturacion_liquidaciondetalle p WHERE liquidacion_id = ' + liquidacionId

            cur3.execute(comando)

            print(comando)

            consecLiquidacion = []

            for cons in cur3.fetchall():
                consecLiquidacion.append({'cons': cons})

            print("consecLiquidacion = ", consecLiquidacion[0])

            consecLiquidacion = consecLiquidacion[0]['cons']
            consecLiquidacion = str(consecLiquidacion)
            print("consecLiquidacion = ", consecLiquidacion)

            consecLiquidacion = consecLiquidacion.replace("(", ' ')
            consecLiquidacion = consecLiquidacion.replace(")", ' ')
            consecLiquidacion = consecLiquidacion.replace(",", ' ')

            if consecLiquidacion.strip() == 'None':
                print("consecLiquidacion = ", consecLiquidacion)
                consecLiquidacion = 0


            # Aqui liquidacion de Materiales Quirugicos van a la cuenta

            detalle = 'select matqx.suministro_id suministro, sum.nombre nomSuministro , tipos.nombre tipo ,matqx."valorLiquidacion" valorLiquidacionMat from cirugia_cirugiasmaterialqx matqx, facturacion_suministros sum, facturacion_tipossuministro tipos where matqx.cirugia_id= ' + "'" + str(cirugiaId) + "'" + ' and matqx.suministro_id = sum.id and sum."tipoSuministro_id" = tipos.id and tipos.nombre = ' + "'" + str('MATERIAL QX') + "'"

            materialesQx = []

            print(detalle)
            cur3.execute(detalle)

            for suministro, nomSuministro, tipo, valorLiquidacionMat  in cur3.fetchall():
                materialesQx.append({'suministro': suministro, 'nomSuministro':nomSuministro, 'tipo':tipo, 'valorLiquidacionMat':valorLiquidacionMat})

            print("materialesQx = " , materialesQx)


            # Materialde sutura y conexion

            for matQx in materialesQx:

                suministro = str(matQx['suministro'])
                suministro = suministro.replace("(", ' ')
                suministro = suministro.replace(")", ' ')
                suministro = suministro.replace(",", ' ')

                valorLiquidacionMat = str(matQx['valorLiquidacionMat'])
                valorLiquidacionMat = valorLiquidacionMat.replace("(", ' ')
                valorLiquidacionMat = valorLiquidacionMat.replace(")", ' ')
                valorLiquidacionMat = valorLiquidacionMat.replace(",", ' ')

                consecLiquidacion= int(consecLiquidacion) + 1
                comando = 'INSERT INTO facturacion_liquidaciondetalle (consecutivo,fecha, cantidad, "valorUnitario", "valorTotal", "estadoRegistro", "fechaCrea", "fechaRegistro",  "cums_id",  "usuarioRegistro_id", liquidacion_id, "tipoRegistro", "tipoHonorario_id", cirugia_id) VALUES (' + "'" + str(consecLiquidacion) + "','" + str(fechaRegistro) + "','" + str('1') + "','" + str(valorLiquidacionMat) + "','" + str(valorLiquidacionMat) + "','" + str('A') + "','" + str(fechaRegistro) + "','" + str(fechaRegistro)  + "','" + str(suministro) + "','" + str(username_id) + "'," + liquidacionId + ",'SISTEMA'," + "'" + str(registroMateriales.id) + "'," +  "'" + str(cirugiaId) + "')"
                print ("comando ", comando)
                cur3.execute(comando)

                # En teoria hasta aqui Materiales de sutura  ISS de acuerdo al procedimiento
                #

            pasada=0


            for procedimiento1 in cupsLiquidacion:

                pasada = pasada +1

                procedimiento = str(procedimiento1['cups'])
                procedimiento = procedimiento.replace("(", ' ')
                procedimiento = procedimiento.replace(")", ' ')
                procedimiento = procedimiento.replace(",", ' ')
                print("procedimiento por el FORSEGUNDO = " ,procedimiento)
                procedimiento =procedimiento.strip()

                # consigue La cantidad de uvr del procedimiento

                detalle = 'SELECT "cantidadUvr" cantidadUvr FROM clinico_examenes WHERE id = ' + "'" + str(procedimiento) + "'"

                cantidadUvrProced = []

                cur3.execute(detalle)

                for cantidadUvr in cur3.fetchall():

                    cantidadUvrProced.append({'cantidadUvr': cantidadUvr })

                for cantidadUvrProced in cantidadUvrProced[0]['cantidadUvr']:

                    cantidadUvrProced = cantidadUvrProced

                print("cantidadUvrProced =" , cantidadUvrProced)

                # consigo valor De 1 Uver a pagar al cirujano

                detalle = 'SELECT "valorUvr" valorUvrCirujano FROM tarifarios_tablahonorariosiss WHERE id = ' + "'" + str(registroHonorarioCirujano.id) + "'"

                valorUvrCirujanoProced = []

                cur3.execute(detalle)

                for valorUvrCirujano in cur3.fetchall():
                    valorUvrCirujanoProced.append({'valorUvrCirujano': valorUvrCirujano })

                print("valorUvrCirujanoProced =" , valorUvrCirujanoProced[0]['valorUvrCirujano'])

                for valorUvrCirujanoProced in valorUvrCirujanoProced[0]['valorUvrCirujano']:
                    print("valorUvrCirujanoProced1" , valorUvrCirujanoProced)
                    liquidaCirujano= float(valorUvrCirujanoProced) * float(cantidadUvrProced)
                    print ("liquidaCirujano =",liquidaCirujano )

                # En teoria hasta aqui tengo el valor del Cirujano ISS de acuerdo al procedimiento

                # Aqui liquidacion de honorarios Anestesiologo

                # consigo valor De 1 Uver a pagar al Anestesiologo

                detalle = 'SELECT "valorUvr" valorUvrAnestesiologo FROM tarifarios_tablahonorariosiss WHERE id = ' + "'" + str(registroHonorarioAnestesiologo.id) + "'"

                valorUvrAnestesiologoProced = []

                cur3.execute(detalle)

                for valorUvrAnestesiologo in cur3.fetchall():
                    valorUvrAnestesiologoProced.append({'valorUvrAnestesiologo': valorUvrAnestesiologo })

                print("valorUvrAnestesiologoProced =" , valorUvrAnestesiologoProced[0]['valorUvrAnestesiologo'])

                for valorUvrAnestesiologoProced in valorUvrAnestesiologoProced[0]['valorUvrAnestesiologo']:
                    print("valorUvrAnestesiologoProced = " ,valorUvrAnestesiologoProced)
                    liquidaAnestesiologo= float(valorUvrAnestesiologoProced) * float(cantidadUvrProced)
                    print("liquidaAnestesiologo =", liquidaAnestesiologo)
                # En teoria hasta aqui honorariosAnestesiologo ISS de acuerdo al procedimiento

                # Aqui liquidacion de honorarios Ayudante

                # consigo valor De 1 Uver a pagar al Ayudante

                detalle = 'SELECT "valorUvr" valorUvrAyudante FROM tarifarios_tablahonorariosiss WHERE id = ' + "'" + str(registroHonorarioAyudante.id) + "'"

                valorUvrAyudanteProced = []

                cur3.execute(detalle)

                for valorUvrAyudante in cur3.fetchall():
                    valorUvrAyudanteProced.append(
                        {'valorUvrAyudante': valorUvrAyudante })

                print("valorUvrAyudanteProced =" , valorUvrAyudanteProced[0]['valorUvrAyudante'])

                for valorUvrAyudanteProced in valorUvrAyudanteProced[0]['valorUvrAyudante']:
                    print(valorUvrAyudanteProced)
                    liquidaAyudante= float(valorUvrAyudanteProced) * float(cantidadUvrProced)
                    print("liquidaAyudante =", liquidaAyudante)

                # En teoria hasta aqui honorarios Ayudante ISS de acuerdo al procedimiento

                # Aqui INSERT a la tabla lioquidaciones de los valores liquidados para un procedimiento

                # Aqui RUTINA busca consecutivo de liquidacion


                comando = 'SELECT (max(p.consecutivo) + 1) cons FROM facturacion_liquidaciondetalle p WHERE liquidacion_id = ' + liquidacionId

                cur3.execute(comando)

                print(comando)

                consecLiquidacion = []

                for cons in cur3.fetchall():
                    consecLiquidacion.append({'cons': cons})

                print("consecLiquidacion = ", consecLiquidacion[0])

                consecLiquidacion = consecLiquidacion[0]['cons']
                consecLiquidacion = str(consecLiquidacion)
                print("consecLiquidacion = ", consecLiquidacion)

                consecLiquidacion = consecLiquidacion.replace("(", ' ')
                consecLiquidacion = consecLiquidacion.replace(")", ' ')
                consecLiquidacion = consecLiquidacion.replace(",", ' ')
                print("consecLiquidacion = ", consecLiquidacion)

                if consecLiquidacion.strip() == 'None':
                    print("consecLiquidacion = ", consecLiquidacion)
                    consecLiquidacion = 1

                # Fin RUTINA busca consecutivo de liquidacion
                # Cirujano
                comando = 'INSERT INTO facturacion_liquidaciondetalle (consecutivo,fecha, cantidad, "valorUnitario", "valorTotal","estadoRegistro", "fechaCrea", "fechaRegistro",  "examen_id",  "usuarioRegistro_id", liquidacion_id, "tipoRegistro", "tipoHonorario_id", cirugia_id ) VALUES (' + "'" + str(consecLiquidacion) + "','" + str(fechaRegistro) + "','" + str('1') + "','" + str(liquidaCirujano) + "','" + str(liquidaCirujano) + "','" + str('A') + "','" + str(fechaRegistro) + "','" + str(fechaRegistro) + "','" + str(procedimiento) + "','" + str(username_id) + "'," + liquidacionId + ",'SISTEMA'," + "'" + str(registroHonorarioCirujano.id)  + "'," +  "'" + str(cirugiaId) + "')"
                print("comando ", comando)
                cur3.execute(comando)
                # Anestesiologo
                consecLiquidacion= int(consecLiquidacion) + 1
                comando = 'INSERT INTO facturacion_liquidaciondetalle (consecutivo,fecha, cantidad, "valorUnitario", "valorTotal", "estadoRegistro","fechaCrea", "fechaRegistro", "examen_id",  "usuarioRegistro_id", liquidacion_id, "tipoRegistro", "tipoHonorario_id", cirugia_id) VALUES (' + "'" + str(consecLiquidacion) + "','" + str(fechaRegistro) + "','" + str('1') + "','" + str(liquidaAnestesiologo) + "','" + str(liquidaAnestesiologo) + "','" + str('A') + "','" + str(fechaRegistro) + "','" + str(fechaRegistro) + "','" + str(procedimiento) + "','" + str(username_id) + "'," + liquidacionId + ",'SISTEMA'," + "'" + str(registroHonorarioAnestesiologo.id) + "'," +  "'" + str(cirugiaId) + "')"
                print("comando ", comando)
                cur3.execute(comando)

                # Ayudante
                consecLiquidacion= int(consecLiquidacion) + 1

                comando = 'INSERT INTO facturacion_liquidaciondetalle (consecutivo,fecha, cantidad, "valorUnitario", "valorTotal",  "estadoRegistro", "fechaCrea", "fechaRegistro", "examen_id",  "usuarioRegistro_id", liquidacion_id, "tipoRegistro", "tipoHonorario_id", cirugia_id) VALUES (' + "'" + str(consecLiquidacion) + "','" + str(fechaRegistro) + "','" + str('1') + "','" + str(liquidaAyudante) + "','" + str(liquidaAyudante) + "','" + str('A') + "','" + str(fechaRegistro) + "','" + str(fechaRegistro) +  "','" + str(procedimiento) + "','" + str(username_id) + "'," + liquidacionId + ",'SISTEMA'," + "'" + str(registroHonorarioAyudante.id) + "'," +  "'" + str(cirugiaId) + "')"
                print("comando ", comando)
                cur3.execute(comando)

                print("ANTES DE pasada = ", pasada)

                if (pasada==1):

                    # Aqui liquidacion de Salas de CIRUGIA

                    print ("Entre pasada = ", pasada)

                    ## Luego ir a tabla tarifarios_tablaSalasdecirugiaiss para sacar el valor
                    #
                    detalle = 'SELECT tarifa.valor valor FROM cirugia_cirugias cir, sitios_tipossalas tipsal, tarifarios_tablaSalasdecirugiaiss tarifa, sitios_salas sala WHERE cir.id = ' + "'" + str(cirugiaId) + "'" + ' AND cir.sala_id = sala.id and sala."tipoSala_id" = tipsal.id and tarifa."tiposSala_id" = tipsal.id and ' + "'" + str(cantidadUvrProced) + "'" + ' between tarifa."desdeUvr" AND tarifa."hastaUvr"'
                    valorSala = []
                    print(detalle)
                    cur3.execute(detalle)

                    for valor in cur3.fetchall():
                        valorSala.append({'valor': valor})

                    print("valor sala = " , valorSala[0])

                    for valorSala in valorSala[0]['valor']:

                        #valorSala = valorSala[0]
                        print("valor sala = ", valorSala)

                        valorSala = str(valorSala)
                        valorSala = valorSala.replace("(", ' ')
                        valorSala = valorSala.replace(")", ' ')
                        valorSala = valorSala.replace(",", ' ')
                        print("valor sala = ", valorSala)
                        liquidaValorSala = valorSala

                    # Salas
                    #
                    consecLiquidacion= int(consecLiquidacion) + 1
                    comando = 'INSERT INTO facturacion_liquidaciondetalle (consecutivo,fecha, cantidad, "valorUnitario", "valorTotal", "estadoRegistro", "fechaCrea", "fechaRegistro",  "examen_id",  "usuarioRegistro_id", liquidacion_id, "tipoRegistro", "tipoHonorario_id", cirugia_id) VALUES (' + "'" + str(consecLiquidacion) + "','" + str(fechaRegistro) + "','" + str('1') + "','" + str(liquidaValorSala) + "','" + str(liquidaValorSala) + "','" + str('A') + "','" + str(fechaRegistro) + "','" + str(fechaRegistro)  + "','" + str(procedimiento)  + "','" + str(username_id) + "'," + liquidacionId + ",'SISTEMA'," + "'" + str(registroDerechosSala.id)+ "'," +  "'" + str(cirugiaId) + "')"
                    print("comando", comando)
                    cur3.execute(comando)

                    # En teoria hasta aqui Salas de CIRUGIA  ISS de acuerdo al procedimiento

                # Fin INSERT liquidaciones


            miConexion3.commit()
            cur3.close()
            miConexion3.close()

            return JsonResponse({'success': True, 'message': 'Liquidacion Honorarios Iss cargada a cuenta Paciente Verificar valores !'})

        except psycopg2.DatabaseError as error:
            print("Entre por rollback", error)
            if miConexion3:
                print("Entro ha hacer el Rollback")
                miConexion3.rollback()
            raise error

        finally:
            if miConexion3:
                cur3.close()
                miConexion3.close()

